const pixabayApiKey = '34748321-56ec586673804760cca13f7f6';
const pixabayBaseUrl = 'https://pixabay.com/api';
const pixabayEndpoint = `${pixabayBaseUrl}/?key=${pixabayApiKey}&q=job&image_type=photo&per_page=10`;

const adzunaApiKey = '02786c33c3cf2d6b3ed4996c322f3e3f';
const adzunaBaseUrl = 'https://api.adzuna.com/v1';
const adzunaEndpoint = `${adzunaBaseUrl}/api/jobs/gb/search/1`;
const adzunaQueryParams = {
  app_id: '9f5cec5c',
  app_key: adzunaApiKey,
  results_per_page: 10, // Adjust the number of jobs per page as desired
};

const advertContainer = document.getElementById('advert-container');

fetch(pixabayEndpoint)
  .then((response) => response.json())
  .then((pixabayData) => {
    const imageList = pixabayData.hits;

    fetchAdzunaJobs(imageList);
  })
  .catch((error) => {
    console.error('Error occurred:', error);
  });

function fetchAdzunaJobs(imageList) {
  const adzunaQueryString = Object.keys(adzunaQueryParams)
    .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(adzunaQueryParams[key])}`)
    .join('&');
  const adzunaUrl = `${adzunaEndpoint}?${adzunaQueryString}`;

  fetch(adzunaUrl)
    .then((response) => response.json())
    .then((adzunaData) => {
      const jobList = adzunaData.results;
      let currentIndex = 0;

      function changeAdvert() {
        const job = jobList[currentIndex];
        const image = imageList[currentIndex];

        const advertPost = document.createElement('div');
        advertPost.classList.add('advert-post');

        const advertImage = document.createElement('img');
        advertImage.src = image.webformatURL;
        advertImage.alt = 'Advert Image';

        const advertDetails = document.createElement('div');
        advertDetails.classList.add('advert-details');

        const advertTitle = document.createElement('h2');
        advertTitle.classList.add('advert-title');
        advertTitle.textContent = job.title;

        const jobDescription = document.createElement('p');
        jobDescription.classList.add('advert-description');
        jobDescription.textContent = job.description;

        if (jobDescription.textContent.length > 35) {
          jobDescription.textContent = jobDescription.textContent.slice(0, 35) + '...';
        }

        const readMoreLink = document.createElement('a');
        readMoreLink.href = job.redirect_url;
        readMoreLink.classList.add('btn');
        readMoreLink.textContent = 'Read More';

        advertDetails.appendChild(advertTitle);
        advertDetails.appendChild(jobDescription);
        advertDetails.appendChild(readMoreLink);

        advertPost.appendChild(advertImage);
        advertPost.appendChild(advertDetails);

        advertContainer.innerHTML = ''; // Clear existing advertisement
        advertContainer.appendChild(advertPost);

        currentIndex = (currentIndex + 1) % jobList.length; // Update current index for the next advertisement

        setTimeout(changeAdvert, 3000); // Schedule the next advertisement change after 3 seconds
      }

      setTimeout(changeAdvert, 3000); // Start the advertisement rotation after 3 seconds
    })
    .catch((error) => {
      console.error('Error occurred:', error);
    });
}


//-----------------------------------------


function fetchMangaDetails(mangaIds, swiperId) {
  const apiUrl = 'https://api.jikan.moe/v4/manga/';

  mangaIds.forEach(mangaId => {
    const mangaUrl = `${apiUrl}${mangaId}/full`;

    fetch(mangaUrl)
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        const manga = data.data;
        console.log(`Manga ID: ${mangaId}`);
        console.log(`Genre: ${manga.genre}`);

        const swiperWrapper = document.querySelector(`#${swiperId} .swiper-wrapper`);
        const swiperSlide = document.createElement("div");
        swiperSlide.classList.add("swiper-slide");

        const img = document.createElement("img");
        img.src = manga.images.jpg.large_image_url;
        img.alt = manga.title;
        swiperSlide.appendChild(img);

        const textBody = document.createElement("div");
        textBody.classList.add("text-body");

        const h4 = document.createElement("h4");
        let title = manga.title;

        if (title.length > 15) {
          title = title.slice(0, 15) + "...";
        }

        h4.textContent = title;
        h4.style.cursor = "pointer";
        h4.addEventListener("click", () => {
          window.open(manga.url, "_blank");
        });

        textBody.appendChild(h4);
        swiperSlide.appendChild(textBody);

        if (manga.chapters > 0) {
          const chapter = document.createElement("p");
          chapter.textContent = `Chapter ${manga.chapters}`;
          swiperSlide.appendChild(chapter);
        }

        swiperWrapper.appendChild(swiperSlide);
      })
      .catch(error => {
        console.error(error);
      });
  });
}
